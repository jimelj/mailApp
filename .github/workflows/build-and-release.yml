name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on tags starting with 'v'
permissions:
  contents: write
jobs:
  build:
    name: Build App
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]  # Target macOS and Windows
        python-version: [3.11]  # Specify Python version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create .env file from secret
        env:
          POSTFLOW_ENV_CONTENT: ${{ secrets.POSTFLOW_ENV_CONTENT }}
        run: echo "$POSTFLOW_ENV_CONTENT" > .env

      - name: Install dependencies
        run: |
          # Install base requirements
          pip install -r requirements.txt

          # Conditionally install pywin32 for Windows
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pip install pywin32==308
            pip install pypiwin32==223
            pip install pywin32-ctypes==0.2.3
          fi

      - name: Build application with PyInstaller
        shell: bash
        run: |
            if [ "${{ matrix.os }}" == "macos-latest" ]; then
              pyinstaller --onefile --noconsole \
                --add-data ".env:." \
                --add-data "facilityReport.xlsx:." \
                --add-data "Zips by Address File Group.xlsx:." \
                --add-data "resources/splash.png:resources" \
                --icon=icon.icns \
                --name=PostFlow-${{ github.ref_name }} main.py
            elif [ "${{ matrix.os }}" == "windows-latest" ]; then
              pyinstaller --onefile --noconsole \
                --add-data ".env;." \
                --add-data "facilityReport.xlsx;." \
                --add-data "Zips by Address File Group.xlsx;." \
                --add-data "resources/splash.png;resources" \
                --icon=icon.ico \
                --name=PostFlow-${{ github.ref_name }} main.py
            fi

      - name: Verify build artifacts
        run: |
          echo "Listing dist directory:"
          ls dist

      - name: Create DMG using hdiutil (for macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir dmg_contents
          cp -R dist/PostFlow-${{ github.ref_name }}.app dmg_contents/
          hdiutil create -volname "PostFlow-${{ github.ref_name }}" \
            -srcfolder dmg_contents \
            -ov \
            -format UDZO \
            dist/PostFlow-${{ github.ref_name }}.dmg
          rm -rf dmg_contents

      - name: Archive build artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: postflow-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.dmg

      - name: Clean up temporary files
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            powershell Remove-Item -Path dist, .env -Recurse -Force
          else
            rm -rf dist .env || true
          fi
        shell: bash

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            release-artifacts/postflow-macos-latest/*.dmg
            release-artifacts/postflow-windows-latest/*.exe
          tag: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "PostFlow-${{ github.ref_name }}"
          body: |
            ## Changes in this release
            Add your release notes here.